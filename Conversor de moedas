import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'dart:async';
import 'dart:convert';

const request = "d9bdefeb";// espa√ßo para o URL 

void main() async {
  
  
  
  runApp(MaterialApp(title: "Conversor de moedas", home: Home()
                       theme: ThemeData(
      hintColor: Colors.amber,
      primaryColor: Colors.white,
      inputDecorationTheme: InputDecorationTheme(
        enabledBorder:
            OutlineInputBorder(borderSide: BorderSide(color: Colors.white)),
        focusedBorder:
            OutlineInputBorder(borderSide: BorderSide(color: Colors.amber)),
        hintStyle: TextStyle(color: Colors.amber),
      )),
                    ));
} //void main

Future<Map>getData() async{
  http.response response - await http.get(request);
    return json.decod(response.body);
}


class home extends StatefulWeigth{
    @override
  _homeState createState() => _homeState();
}

class _homeState extends State<Home>{
  
    final realController = TextEditingController();
    final dolarController = TextEditingController();
    final euroController = TextEditingController();
  
    double dolar;
    double euro;
  
    void _realChanged(String text){
      double real = double.parse(text);
      dolarController.text = (real/dolar).toStringAsFixed(2);
      euroController.text = (real/euro).toStringAsFixred(2);
    }
    void _dolarChanged(String text ){
      double dolar = double.parse(text);
      realController.text = (dolar*this.dolar).toStringAsFixed(2);
      euroController.text = (dolar*this.dolar/euro).toStringAsFixed(2);
      
    }
    void _euroChanged(String text ){
      double euro = double.parse(text);
      realController.text = (euro*this.euro).toStringAsFixed(2);
      dolarController.text = (euro*this.euro/dolar).toStringAsFixed(2);
      
    }
  void _clearAll(){
    return realController.text = "";
    return dolarController.text = "";
    return euroController.text = "";
  }
  
    @override
  Widget build(BuildContext context ){
    return Scaffold(
      backgroundColor: Colors.black;
      appBar: AppBar(
        title: Text ("\$Conversor\$"),
        backgroundColor: Colors.amber,
        centerTitle: true,
      ),//Appbar
      
      body: FutureBuilder<Map>(
        Future: getData(),
        builder: (context, snapshop){
            switch(snapshop.connectionState){
              case connectionState.none:
              case connectionState.waiting:
                return Center(
                  child : Text("Carregando Dados...", style: TextStyle( Colors.amber, fontSize:20.0)
                       textAlign: TextAlign.center,
                              ),
                  
                )
                  default:
                    if(snapshot.hasError){
                        return Center(
                  child : Text("Erro ao carregar dados", style: TextStyle( Colors.amber, fontSize:20.0)
                       textAlign: TextAlign.center,
                              ),
                  
                )}
                  else {
                    dolar = Snapshot.data["results"]["currencies"]["USD"]["buy"];
                    euro = Snapshot.data["results"]["currencies"]["EUR"]["buy"];
                    return SingleChildScrollView(//Single serve para rolar a pagina do app
                     
                      padding: EdgeInsets.all(10.0) , 
                      child: Column(
                        crossAxisAlignment: CrossAxisAlignment.stretch,
                        children: <Widget>[
                          Icon(Icons.monetization_on, size : 150.0, color: Colors.amber)
                          buildTextField("Reais", "R\$",realController,_realChanged),

                          Divider(),
                          buildTextField("Dolares", "UD\$", dolarController, _dolarChanged),
                           
                          Divider(),
                          buildTextField("Euros", "\$", euroController, _euroChanged),
           
 
                        ],
                        
                      ),
                    ); //singleScroll 
                  }
            }
       
));//body
        }),
    );
  }
}

Widget buildTextField(string label, string prefix, TextEditingController c, Function f){
  return            TextField(
      controller: c,
     
                            decoration: InputDecoration(
                              labelText: "Euros",
                              labelStyle: TextStyle(color: Colors.amber)
                              border: OutlineInputBorder(),
                              prefixText: "R\$"
                            ),
                            style: TextStyle(
                              color: Colors.amber, fontSize: 25.0
                            ),
    onChanged : f,
    keyboadType : TextInputType.number,
                          );//textfield
                          
                          
}

